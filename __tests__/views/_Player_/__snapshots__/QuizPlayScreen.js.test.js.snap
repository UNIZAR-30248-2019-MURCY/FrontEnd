// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<QuizPlayScreen/> QuizPlayScreen test against snapshot 1`] = `
<View
  style={
    Object {
      "backgroundColor": "black",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "marginBottom": 0,
        "marginRight": 30,
        "marginTop": 30,
      }
    }
  >
    <View
      style={
        Object {
          "borderRadius": 3,
        }
      }
    >
      <View
        accessible={true}
        isTVSelectable={true}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "borderColor": "#2089dc",
              "borderRadius": 3,
              "borderWidth": 0,
              "flexDirection": "row",
              "justifyContent": "center",
              "padding": 8,
            }
          }
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "grey",
                  "fontSize": 30,
                },
                undefined,
                Object {
                  "fontFamily": "FontAwesome",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
          >
            
          </Text>
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "black",
        "flex": 1,
        "padding": 20,
      }
    }
  >
    <View
      style={
        Object {
          "marginBottom": 10,
          "marginTop": 0,
          "paddingBottom": 20,
          "paddingLeft": 20,
          "paddingRight": 20,
        }
      }
    >
      <Text
        numberOfLines={2}
        style={
          Object {
            "color": "white",
            "fontSize": 35,
            "fontWeight": "bold",
          }
        }
        theme={
          Object {
            "colors": Object {
              "disabled": "hsl(208, 8%, 90%)",
              "divider": "#bcbbc1",
              "error": "#ff190c",
              "grey0": "#393e42",
              "grey1": "#43484d",
              "grey2": "#5e6977",
              "grey3": "#86939e",
              "grey4": "#bdc6cf",
              "grey5": "#e1e8ee",
              "greyOutline": "#bbb",
              "platform": Object {
                "android": Object {
                  "error": "#f44336",
                  "primary": "#2196f3",
                  "secondary": "#9C27B0",
                  "success": "#4caf50",
                  "warning": "#ffeb3b",
                },
                "ios": Object {
                  "error": "#ff3b30",
                  "primary": "#007aff",
                  "secondary": "#5856d6",
                  "success": "#4cd964",
                  "warning": "#ffcc00",
                },
              },
              "primary": "#2089dc",
              "searchBg": "#303337",
              "secondary": "#8F0CE8",
              "success": "#52c41a",
              "warning": "#faad14",
            },
          }
        }
      >
        
      </Text>
    </View>
    <View />
    <RCTScrollView
      activeAnimationOptions={null}
      activeAnimationType="timing"
      activeSlideAlignment="center"
      activeSlideOffset={20}
      apparitionDelay={0}
      automaticallyAdjustContentInsets={false}
      autoplay={false}
      autoplayDelay={1000}
      autoplayInterval={3000}
      callbackOffsetMargin={5}
      containerCustomStyle={Object {}}
      contentContainerCustomStyle={Object {}}
      contentContainerStyle={
        Array [
          Object {
            "paddingLeft": 67.5,
            "paddingRight": 67.5,
          },
          Object {},
        ]
      }
      data={Array []}
      decelerationRate="fast"
      directionalLockEnabled={true}
      enableMomentum={false}
      enableSnap={true}
      firstItem={0}
      hasParallaxImages={false}
      horizontal={true}
      inactiveSlideOpacity={0.7}
      inactiveSlideScale={0.9}
      inactiveSlideShift={0}
      inverted={false}
      itemWidth={615}
      layout="stack"
      lockScrollTimeoutDuration={1000}
      lockScrollWhileSnapping={false}
      loop={false}
      loopClonesPerSide={3}
      onLayout={[Function]}
      onResponderRelease={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      onTouchEnd={[Function]}
      onTouchStart={[Function]}
      overScrollMode="never"
      pinchGestureEnabled={false}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEnabled={true}
      scrollEventThrottle={1}
      scrollInterpolator={[Function]}
      scrollsToTop={false}
      shouldOptimizeUpdates={true}
      showsHorizontalScrollIndicator={false}
      showsVerticalScrollIndicator={false}
      slideInterpolatedStyle={[Function]}
      slideStyle={Object {}}
      sliderWidth={750}
      style={
        Object {
          "flexDirection": "row",
          "opacity": 0,
          "width": 750,
        }
      }
      swipeThreshold={20}
      useScrollView={false}
      vertical={false}
    >
      <View />
    </RCTScrollView>
    <View />
    <View
      style={
        Object {
          "alignItems": "flex-end",
          "justifyContent": "flex-end",
          "marginBottom": 40,
        }
      }
    >
      <View
        style={
          Object {
            "borderRadius": 14,
          }
        }
      >
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "white",
                "borderColor": "white",
                "borderRadius": 14,
                "borderWidth": 0.5,
                "flexDirection": "row",
                "height": 40,
                "justifyContent": "center",
                "margin": 10,
                "marginTop": 10,
                "padding": 8,
                "width": 60,
              }
            }
          >
            <Text
              allowFontScaling={false}
              style={
                Array [
                  Object {
                    "color": "black",
                    "fontSize": 22,
                  },
                  undefined,
                  Object {
                    "fontFamily": "FontAwesome",
                    "fontStyle": "normal",
                    "fontWeight": "normal",
                  },
                  Object {},
                ]
              }
            >
              
            </Text>
          </View>
        </View>
      </View>
      <Text
        numberOfLines={2}
        style={
          Object {
            "alignSelf": "center",
            "color": "white",
            "fontSize": 15,
          }
        }
        theme={
          Object {
            "colors": Object {
              "disabled": "hsl(208, 8%, 90%)",
              "divider": "#bcbbc1",
              "error": "#ff190c",
              "grey0": "#393e42",
              "grey1": "#43484d",
              "grey2": "#5e6977",
              "grey3": "#86939e",
              "grey4": "#bdc6cf",
              "grey5": "#e1e8ee",
              "greyOutline": "#bbb",
              "platform": Object {
                "android": Object {
                  "error": "#f44336",
                  "primary": "#2196f3",
                  "secondary": "#9C27B0",
                  "success": "#4caf50",
                  "warning": "#ffeb3b",
                },
                "ios": Object {
                  "error": "#ff3b30",
                  "primary": "#007aff",
                  "secondary": "#5856d6",
                  "success": "#4cd964",
                  "warning": "#ffcc00",
                },
              },
              "primary": "#2089dc",
              "searchBg": "#303337",
              "secondary": "#8F0CE8",
              "success": "#52c41a",
              "warning": "#faad14",
            },
          }
        }
      >
        Send quiz
      </Text>
    </View>
  </View>
</View>
`;
