// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<EditRemoveQuestion /> CreateQuestion test against snapshot 1`] = `
<RCTScrollView>
  <View>
    <View
      style={
        Object {
          "flex": 1,
          "padding": 20,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "marginTop": 50,
            "padding": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "fontSize": 42.5,
            }
          }
          theme={
            Object {
              "colors": Object {
                "disabled": "hsl(208, 8%, 90%)",
                "divider": "#bcbbc1",
                "error": "#ff190c",
                "grey0": "#393e42",
                "grey1": "#43484d",
                "grey2": "#5e6977",
                "grey3": "#86939e",
                "grey4": "#bdc6cf",
                "grey5": "#e1e8ee",
                "greyOutline": "#bbb",
                "platform": Object {
                  "android": Object {
                    "error": "#f44336",
                    "primary": "#2196f3",
                    "secondary": "#9C27B0",
                    "success": "#4caf50",
                    "warning": "#ffeb3b",
                  },
                  "ios": Object {
                    "error": "#ff3b30",
                    "primary": "#007aff",
                    "secondary": "#5856d6",
                    "success": "#4cd964",
                    "warning": "#ffcc00",
                  },
                },
                "primary": "#2089dc",
                "searchBg": "#303337",
                "secondary": "#8F0CE8",
                "success": "#52c41a",
                "warning": "#faad14",
              },
            }
          }
        >
          Question
        </Text>
      </View>
      <View
        style={
          Object {
            "alignItems": "center",
            "flex": 1,
            "padding": 20,
          }
        }
      >
        <Text
          style={
            Object {
              "color": "grey",
              "flex": 1,
              "fontSize": 22,
            }
          }
          theme={
            Object {
              "colors": Object {
                "disabled": "hsl(208, 8%, 90%)",
                "divider": "#bcbbc1",
                "error": "#ff190c",
                "grey0": "#393e42",
                "grey1": "#43484d",
                "grey2": "#5e6977",
                "grey3": "#86939e",
                "grey4": "#bdc6cf",
                "grey5": "#e1e8ee",
                "greyOutline": "#bbb",
                "platform": Object {
                  "android": Object {
                    "error": "#f44336",
                    "primary": "#2196f3",
                    "secondary": "#9C27B0",
                    "success": "#4caf50",
                    "warning": "#ffeb3b",
                  },
                  "ios": Object {
                    "error": "#ff3b30",
                    "primary": "#007aff",
                    "secondary": "#5856d6",
                    "success": "#4cd964",
                    "warning": "#ffcc00",
                  },
                },
                "primary": "#2089dc",
                "searchBg": "#303337",
                "secondary": "#8F0CE8",
                "success": "#52c41a",
                "warning": "#faad14",
              },
            }
          }
        >
          Question and description
        </Text>
        <TextInput
          allowFontScaling={true}
          autoCapitalize="none"
          className="questionInput"
          onChangeText={[Function]}
          placeholder="Question"
          placeholderTextColor="darkgrey"
          rejectResponderTermination={true}
          style={
            Object {
              "backgroundColor": "whitesmoke",
              "borderRadius": 14,
              "color": "grey",
              "fontSize": 18,
              "fontWeight": "500",
              "height": 55,
              "margin": 10,
              "padding": 8,
              "width": 300,
            }
          }
          underlineColorAndroid="transparent"
        />
        <TextInput
          allowFontScaling={true}
          autoCapitalize="none"
          className="description"
          onChangeText={[Function]}
          placeholder="Description"
          placeholderTextColor="darkgrey"
          rejectResponderTermination={true}
          style={
            Object {
              "backgroundColor": "whitesmoke",
              "borderRadius": 14,
              "color": "grey",
              "fontSize": 18,
              "fontWeight": "500",
              "height": 55,
              "margin": 10,
              "padding": 8,
              "width": 300,
            }
          }
          underlineColorAndroid="transparent"
        />
        <Text
          style={
            Object {
              "color": "grey",
              "flex": 1,
              "fontSize": 22,
              "marginTop": 30,
            }
          }
          theme={
            Object {
              "colors": Object {
                "disabled": "hsl(208, 8%, 90%)",
                "divider": "#bcbbc1",
                "error": "#ff190c",
                "grey0": "#393e42",
                "grey1": "#43484d",
                "grey2": "#5e6977",
                "grey3": "#86939e",
                "grey4": "#bdc6cf",
                "grey5": "#e1e8ee",
                "greyOutline": "#bbb",
                "platform": Object {
                  "android": Object {
                    "error": "#f44336",
                    "primary": "#2196f3",
                    "secondary": "#9C27B0",
                    "success": "#4caf50",
                    "warning": "#ffeb3b",
                  },
                  "ios": Object {
                    "error": "#ff3b30",
                    "primary": "#007aff",
                    "secondary": "#5856d6",
                    "success": "#4cd964",
                    "warning": "#ffcc00",
                  },
                },
                "primary": "#2089dc",
                "searchBg": "#303337",
                "secondary": "#8F0CE8",
                "success": "#52c41a",
                "warning": "#faad14",
              },
            }
          }
        >
          Answers
        </Text>
        <Text
          style={
            Object {
              "color": "grey",
              "flex": 1,
              "fontSize": 17,
            }
          }
          theme={
            Object {
              "colors": Object {
                "disabled": "hsl(208, 8%, 90%)",
                "divider": "#bcbbc1",
                "error": "#ff190c",
                "grey0": "#393e42",
                "grey1": "#43484d",
                "grey2": "#5e6977",
                "grey3": "#86939e",
                "grey4": "#bdc6cf",
                "grey5": "#e1e8ee",
                "greyOutline": "#bbb",
                "platform": Object {
                  "android": Object {
                    "error": "#f44336",
                    "primary": "#2196f3",
                    "secondary": "#9C27B0",
                    "success": "#4caf50",
                    "warning": "#ffeb3b",
                  },
                  "ios": Object {
                    "error": "#ff3b30",
                    "primary": "#007aff",
                    "secondary": "#5856d6",
                    "success": "#4cd964",
                    "warning": "#ffcc00",
                  },
                },
                "primary": "#2089dc",
                "searchBg": "#303337",
                "secondary": "#8F0CE8",
                "success": "#52c41a",
                "warning": "#faad14",
              },
            }
          }
        >
          Fill in at least 2 answers
        </Text>
        <RCTScrollView
          disableVirtualization={false}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={false}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          numColumns={1}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <View />
        </RCTScrollView>
        <View />
        <View />
        <View
          style={
            Object {
              "borderRadius": 14,
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "grey",
                  "borderColor": "#2089dc",
                  "borderRadius": 14,
                  "borderWidth": 0,
                  "flexDirection": "row",
                  "height": 55,
                  "justifyContent": "center",
                  "margin": 10,
                  "marginTop": 50,
                  "padding": 8,
                  "width": 150,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "white",
                    "fontSize": 18,
                    "paddingBottom": 1,
                    "paddingTop": 2,
                    "textAlign": "center",
                  }
                }
              >
                Edit
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "borderRadius": 14,
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "red",
                  "borderColor": "#2089dc",
                  "borderRadius": 14,
                  "borderWidth": 0,
                  "flexDirection": "row",
                  "height": 45,
                  "justifyContent": "center",
                  "margin": 10,
                  "marginTop": 15,
                  "padding": 8,
                  "width": 120,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "white",
                    "fontSize": 18,
                    "paddingBottom": 1,
                    "paddingTop": 2,
                    "textAlign": "center",
                  }
                }
              >
                Delete
              </Text>
            </View>
          </View>
        </View>
        <View
          style={
            Object {
              "borderRadius": 14,
            }
          }
        >
          <View
            accessible={true}
            isTVSelectable={true}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "opacity": 1,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "transparent",
                  "borderColor": "#2089dc",
                  "borderRadius": 14,
                  "borderWidth": 0,
                  "flexDirection": "row",
                  "height": 55,
                  "justifyContent": "center",
                  "padding": 8,
                  "width": 150,
                }
              }
            >
              <Text
                style={
                  Object {
                    "color": "grey",
                    "fontSize": 18,
                    "paddingBottom": 1,
                    "paddingTop": 2,
                    "textAlign": "center",
                  }
                }
              >
                Return
              </Text>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</RCTScrollView>
`;
